{"version":3,"sources":["redux/actions.js","components/AuthorHandler.js","components/Author.js","components/AuthorListHandler.js","components/AuthorList.js","redux/reducers.js","App.js","serviceWorker.js","index.js"],"names":["LOAD_DATA","DISPLAY_DATA","REMOVE_AUTHOR","SELECT_ITEM","MOVE_UP","MOVE_DOWN","REMOVE_SELECT","ADD_VALUE_TO_INPUT","CHANGE_INPUT_VALUE","SAVE_CHANGED_VALUE","loadData","dispatch","type","xhr","XMLHttpRequest","open","responseType","addEventListener","authorList","response","displayData","send","AuthorHandler","connect","state","ownProps","author","index","isSelected","selectedIndex","input","itemClicked","selectItem","removeAuthor","addValueToInput","props","react_default","a","createElement","className","onClick","title","AuthorListHandler","authorsRequested","requested","buttonClicked","moveUp","moveDown","removeSelect","changeInputValue","value","saveChangedValue","isInputEmpty","isEditorDisabled","map","key","disabled","length","name","onChange","event","target","initialState","store","createStore","arguments","undefined","action","Object","objectSpread","slice","concat","authorListUp","toConsumableArray","_authorListUp$splice","splice","removedAuthorToUp","slicedToArray","authorListDown","_authorListDown$splic","removedAuthorToDown","filter","applyMiddleware","thunk","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b5e15b4.chunk.js","sourcesContent":["export const LOAD_DATA = 'load_data';\r\nexport const DISPLAY_DATA = 'display_data';\r\nexport const REMOVE_AUTHOR = 'remove_author';\r\nexport const SELECT_ITEM = 'select_item';\r\nexport const MOVE_UP = 'move_up';\r\nexport const MOVE_DOWN = 'move_down';\r\nexport const REMOVE_SELECT ='remove_select';\r\nexport const ADD_VALUE_TO_INPUT = 'add_value_to_input';\r\nexport const CHANGE_INPUT_VALUE = 'change_input_value';\r\nexport const SAVE_CHANGED_VALUE = 'save_canged_value';\r\n\r\nexport function loadData() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOAD_DATA\r\n    });\r\n\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.open('GET', '//my-json-server.typicode.com/mate-academy/literary-blog/authors');\r\n    xhr.responseType = 'json';\r\n    xhr.addEventListener('load', () => {\r\n      const authorList = xhr.response;\r\n\r\n      dispatch(displayData(authorList));\r\n    })\r\n    xhr.send();\r\n  };\r\n}\r\n\r\nexport function displayData(authorList) {\r\n  return {\r\n    type: DISPLAY_DATA,\r\n    authorList\r\n  };\r\n}\r\n\r\nexport function removeAuthor(index) {\r\n  return {\r\n    type: REMOVE_AUTHOR,\r\n    index\r\n  }\r\n}\r\n\r\nexport function selectItem(index) {\r\n  return {\r\n    type: SELECT_ITEM,\r\n    index\r\n  }\r\n}\r\n\r\nexport function removeSelect() {\r\n  return {\r\n    type: REMOVE_SELECT\r\n  }\r\n}\r\n\r\nexport function moveUp() {\r\n  return {\r\n    type: MOVE_UP\r\n  }\r\n}\r\n\r\nexport function moveDown() {\r\n  return {\r\n    type: MOVE_DOWN\r\n  }\r\n}\r\n\r\nexport function addValueToInput(input) {\r\n  return {\r\n    type: ADD_VALUE_TO_INPUT,\r\n    input\r\n  }\r\n}\r\n\r\nexport function changeInputValue(value) {\r\n  return {\r\n    type: CHANGE_INPUT_VALUE,\r\n    value\r\n  }\r\n}\r\n\r\nexport function saveChangedValue() {\r\n  return {\r\n    type: SAVE_CHANGED_VALUE,\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Author } from './Author';\r\nimport { selectItem, removeAuthor, addValueToInput } from '../redux/actions'\r\n\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    author: ownProps.author,\r\n    index: ownProps.index,\r\n    isSelected: state.selectedIndex === ownProps.index,\r\n    input: state.input\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    itemClicked: index => dispatch(selectItem(index)),\r\n    removeAuthor: (index) => dispatch(removeAuthor(index)),\r\n    addValueToInput: (input) => dispatch(addValueToInput(input))\r\n  }\r\n}\r\n\r\nexport const AuthorHandler = connect(mapStateToProps, mapDispatchToProps)(Author);\r\n","import React from 'react'\r\n\r\nexport function Author(props) {\r\n  const { author, removeAuthor, index, itemClicked, addValueToInput, isSelected } = props;\r\n\r\n  return (\r\n    <div className={isSelected ? 'selected author-item' : 'author-item'}>\r\n      <span className=\"author\" onClick={() => itemClicked(index)}>{author}</span>\r\n      <div className={isSelected ? 'selected' : 'buttons-bar'}>\r\n        <button type=\"button\" onClick={() => addValueToInput(author)}>Edit</button>\r\n        <button\r\n        type=\"button\"\r\n        className=\"remove-author\"\r\n        title=\"Remove author\"\r\n        onClick={() => removeAuthor(index)}\r\n        >&times;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { AuthorList } from './AuthorList';\r\nimport { \r\n  loadData,\r\n  removeSelect,\r\n  moveUp,\r\n  moveDown,\r\n  changeInputValue,\r\n  saveChangedValue\r\n} from '../redux/actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    index: state.selectedIndex,\r\n    authorsRequested: state.requested,\r\n    authorList: state.authorList,\r\n    input: state.input\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  \r\n  return {\r\n    buttonClicked: () => dispatch(loadData()),\r\n    moveUp: index => dispatch(moveUp(index)),\r\n    moveDown: index => dispatch(moveDown(index)),\r\n    removeSelect: () => dispatch(removeSelect()),\r\n    changeInputValue: (input) => dispatch(changeInputValue(input)),\r\n    saveChangedValue: () => dispatch(saveChangedValue())\r\n  };\r\n}\r\n\r\nexport const AuthorListHandler = connect(mapStateToProps, mapDispatchToProps)(AuthorList);\r\n","import React from 'react'\r\nimport './AuthorList.css';\r\nimport { AuthorHandler } from './AuthorHandler';\r\n\r\nexport  function AuthorList(props) {\r\n  const {\r\n    authorList,\r\n    authorsRequested,\r\n    buttonClicked,\r\n    input,\r\n    changeInputValue,\r\n    index,\r\n    moveUp,\r\n    moveDown,\r\n    saveChangedValue\r\n   } = props;\r\n\r\n   const isInputEmpty = input !== null;\r\n   const isEditorDisabled = isInputEmpty ? false : true;\r\n\r\n  if (!authorsRequested) {\r\n    return <button className=\"loading-btn\"onClick={buttonClicked}>Load data</button>;\r\n  } else {\r\n    if (authorList === null) {\r\n      return <button className=\"loading-btn\">Loading...</button>;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          {authorList.map((author, index) => {\r\n            return <AuthorHandler key={index} author={author} index={index}/>;\r\n          })}\r\n          <div>\r\n            <button\r\n              onClick={() => moveUp(index)}\r\n              disabled={index === 0 || index === null}\r\n            >Move Up\r\n            </button>\r\n            <button\r\n              onClick={() => moveDown(index)}\r\n              disabled={index === authorList.length - 1 || index === null}\r\n            >Move Down\r\n            </button>\r\n          </div>\r\n          <div className=\"editor\">\r\n            <label>\r\n              Editor: \r\n              <input \r\n                type=\"text\" \r\n                name=\"edit\"\r\n                className=\"editor__field\" \r\n                disabled={isEditorDisabled}\r\n                value={isInputEmpty ? input : ''}\r\n                onChange={(event) => changeInputValue(event.target.value)}\r\n              />\r\n            </label>\r\n            <button type=\"button\"\r\n              onClick={() => saveChangedValue()}\r\n              disabled={isEditorDisabled}\r\n            >Save\r\n            </button>\r\n          </div>\r\n        </div>        \r\n      );\r\n    }\r\n  }\r\n}\r\n","import { \r\n  LOAD_DATA,\r\n  DISPLAY_DATA,\r\n  REMOVE_AUTHOR,\r\n  MOVE_DOWN,\r\n  SELECT_ITEM,\r\n  REMOVE_SELECT,\r\n  MOVE_UP,\r\n  ADD_VALUE_TO_INPUT,\r\n  CHANGE_INPUT_VALUE,\r\n  SAVE_CHANGED_VALUE\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  selectedIndex: null,\r\n  requested: false,\r\n  authorList: null,\r\n  input: null\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n  const { selectedIndex, authorList, input } = state;\r\n\r\n  switch(action.type) {\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        requested: true\r\n      };\r\n\r\n    case DISPLAY_DATA:\r\n      return {\r\n        ...state,\r\n        authorList: action.authorList\r\n      };\r\n\r\n    case REMOVE_AUTHOR:\r\n      return {\r\n        ...state,\r\n        authorList: authorList.slice(0, action.index).concat(authorList.slice(action.index + 1)),\r\n        selectedIndex: null\r\n      };\r\n\r\n    case SELECT_ITEM:\r\n    if (selectedIndex === null ||selectedIndex !== action.index) {\r\n      return {\r\n        ...state,\r\n        selectedIndex: action.index\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        selectedIndex: null\r\n      };\r\n    }\r\n\r\n    case REMOVE_SELECT:\r\n      return {\r\n        ...state,\r\n        selectedIndex: null\r\n      };\r\n\r\n    case MOVE_UP:\r\n      if (selectedIndex === 0) {\r\n        return state;\r\n      }\r\n  \r\n      const authorListUp = [...authorList];\r\n      const [removedAuthorToUp] = authorListUp.splice(selectedIndex, 1);\r\n      authorListUp.splice(selectedIndex - 1, 0, removedAuthorToUp);\r\n  \r\n      return {\r\n        ...state,\r\n        authorList: authorListUp,\r\n        selectedIndex: selectedIndex - 1,\r\n      };\r\n\r\n    case MOVE_DOWN:\r\n      if (selectedIndex === authorList.length - 1) {\r\n        return state;\r\n      }\r\n  \r\n      const authorListDown = [...authorList];\r\n      const [removedAuthorToDown] = authorListDown.splice(selectedIndex, 1);\r\n      authorListDown.splice(selectedIndex + 1, 0, removedAuthorToDown);\r\n  \r\n      return {\r\n        ...state,\r\n        authorList: authorListDown,\r\n        selectedIndex: selectedIndex + 1,\r\n      };\r\n      \r\n    case ADD_VALUE_TO_INPUT:\r\n      return {\r\n        ...state,\r\n        input: authorList[selectedIndex]\r\n      }\r\n\r\n    case CHANGE_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        input: action.value\r\n      }\r\n\r\n    case SAVE_CHANGED_VALUE:\r\n      if (input !== '') {\r\n        return {\r\n          ...state,\r\n          authorList: authorList.map((author, index) => {\r\n            if (index !== selectedIndex) {\r\n              return author;\r\n            } else {\r\n              return input;\r\n            }\r\n          }),\r\n          input: null,\r\n          selectedIndex: null\r\n        } \r\n      } else {\r\n        return {\r\n          ...state,\r\n          authorList: authorList.filter((author, index) => {\r\n            return selectedIndex !== index;\r\n          }),\r\n          input: null,\r\n          selectedIndex: null\r\n        }\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { AuthorListHandler } from './components/AuthorListHandler'\r\nimport { reducer } from './redux/reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <AuthorListHandler />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}