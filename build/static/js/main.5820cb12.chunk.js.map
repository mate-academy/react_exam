{"version":3,"sources":["redux/actions.js","components/ListItem.js","components/ItemsList.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["EDIT_AUTHOR","DELETE_AUTHOR","LOAD_AUTHORS","SET_LOADED","DISPLAY","ORDER","ADD_ORDER","REMOVE_ORDER","START_EDITING_AUTHOR","STOP_EDITING_AUTHOR","connect","state","Object","objectSpread","dispatch","addOrder","payload","type","removeOrder","removeAuthor","editAuthor","startEditingAuthor","stopEditingAuthor","_ref","nameField","value","selected","react_default","a","createElement","className","onSubmit","e","preventDefault","input","document","getElementById","id","name","blur","defaultValue","onBlur","autoFocus","onClick","class","ItemsList","listItems","items","map","components_ListItem","ConnectedApp","this","props","requestedData","renderItems","loadAuthors","React","Component","loadedData","Boolean","window","location","hostname","match","initialState","rootReducer","arguments","length","undefined","action","fetch","then","data","json","index","order","asyncDispatch","display","temp","toConsumableArray","sort","b","found","find","v","indexOf","filter","author","item","store","createStore","applyMiddleware","next","syncActivityFinished","actionQueue","flushQueue","forEach","actionWithAsyncDispatch","assign","asyncAction","concat","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5820cb12.chunk.js","sourcesContent":["export const EDIT_AUTHOR = \"edit_author\";\r\nexport const DELETE_AUTHOR = \"delete_author\";\r\nexport const CHANGE_ORDER = \"change_order\";\r\nexport const LOAD_AUTHORS = \"load_authors\";\r\nexport const SET_LOADED = \"set_loaded\";\r\nexport const DISPLAY = \"display\";\r\nexport const ORDER = \"order\";\r\nexport const ADD_ORDER = \"add_order\"; \r\nexport const REMOVE_ORDER = \"remove_order\";\r\nexport const START_EDITING_AUTHOR = \"start_edit\";\r\nexport const STOP_EDITING_AUTHOR = \"stop_edit\";\r\n\r\nexport function startEditingAuthor(payload) {\r\n    return {\r\n        type: START_EDITING_AUTHOR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function stopEditingAuthor(payload) {\r\n    return {\r\n        type: STOP_EDITING_AUTHOR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function changeOrder(id) {\r\n    return {\r\n        type: CHANGE_ORDER,\r\n        id\r\n    }\r\n}\r\n\r\nexport function removeAuthor(payload) {\r\n    return {\r\n        type: DELETE_AUTHOR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function editAuthor(payload) {\r\n    return {\r\n        type: EDIT_AUTHOR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function loadAuthors() {\r\n    return {\r\n        type: LOAD_AUTHORS\r\n    }\r\n}\r\n\r\nexport function setLoaded(payload) {\r\n    return {\r\n        type: SET_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function display(payload) {\r\n    return {\r\n        type: DISPLAY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function order() {\r\n    return {\r\n        type: ORDER\r\n    }\r\n} \r\n\r\nexport function addOrder(payload) {\r\n    return {\r\n        type: ADD_ORDER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function removeOrder(payload) {\r\n    return {\r\n        type: REMOVE_ORDER,\r\n        payload\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addOrder, removeOrder, removeAuthor, editAuthor, startEditingAuthor, stopEditingAuthor } from '../redux/actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addOrder: (payload) => dispatch(addOrder(payload)),\r\n        removeOrder: (payload) => dispatch(removeOrder(payload)),\r\n        removeAuthor: (payload) => dispatch(removeAuthor(payload)),\r\n        editAuthor: (payload) => dispatch(editAuthor(payload)),\r\n        startEditingAuthor: (payload) => dispatch(startEditingAuthor(payload)),\r\n        stopEditingAuthor: (payload) => dispatch(stopEditingAuthor(payload))\r\n    };\r\n}\r\n\r\n\r\nfunction ListItem({ value, addOrder, removeOrder, removeAuthor, startEditingAuthor, stopEditingAuthor, editAuthor }) {\r\n\r\n    let nameField;\r\n    if (value.selected) {\r\n        nameField =\r\n            <td className=\"name__field\">\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    let input = document.getElementById('inputName');\r\n                    editAuthor({ id: value.id, name: input.value });\r\n                    input.blur();\r\n                }}>\r\n                    <input id=\"inputName\" defaultValue={value.name} onBlur={() => stopEditingAuthor({ id: value.id })} autoFocus />\r\n                </form>\r\n            </td>\r\n    }\r\n    else {\r\n        nameField = <td className=\"name__field\" onClick={() => startEditingAuthor({ id: value.id })}>{value.name}</td>\r\n    }\r\n\r\n    return (<tr>\r\n        {nameField}\r\n        <td class=\"updown__field\">\r\n            <a onClick={() => { removeOrder({ id: value.id }) }}>\r\n                ⬆️\r\n            </a>\r\n            <a onClick={() => { addOrder({ id: value.id }) }}>\r\n                ⬇️\r\n            </a>\r\n        </td>\r\n        <td className=\"delete__field\"> <a onClick={() => { removeAuthor({ id: value.id }) }}>✖️</a></td>\r\n    </tr >);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nexport default ({ items }) => {\r\n    let listItems = items.map(value => {\r\n        return <ListItem value={value}></ListItem>\r\n    });\r\n\r\n    return <table>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Sort</th>\r\n            <th>Delete</th>\r\n        </tr>\r\n        \r\n        {listItems}\r\n    </table>\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport ListItem from './components/ListItem';\r\nimport ItemsList from './components/ItemsList';\r\nimport { connect } from 'react-redux';\r\nimport { loadAuthors } from './redux/actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    renderItems: state.renderItems,\r\n    requestedData: state.requestedData,\r\n    loadedData: state.loadedData\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loadAuthors: () => dispatch(loadAuthors())\r\n  };\r\n}\r\n\r\nclass ConnectedApp extends React.Component {\r\n  render() {\r\n    if (this.props.requestedData) {\r\n      if (this.props.renderItems != null)\r\n        return <ItemsList items={this.props.renderItems} />\r\n      else\r\n        return <p> Loading... </p>\r\n    }\r\n    return <button onClick={this.props.loadAuthors}>Load</button>;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedApp);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { DELETE_AUTHOR, LOAD_AUTHORS, setLoaded, display, DISPLAY, SET_LOADED, ORDER, order, ADD_ORDER, REMOVE_ORDER, START_EDITING_AUTHOR, STOP_EDITING_AUTHOR, EDIT_AUTHOR } from './actions';\r\n\r\nconst initialState = {\r\n    requestedData: false,\r\n    renderItems: null,\r\n    loadedData: null\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case LOAD_AUTHORS: {\r\n            fetch(\"http://my-json-server.typicode.com/mate-academy/literary-blog/authors\").then(data => data.json()).then(data => data.map((value, index) => {\r\n                return { id: index + 1, name: value, order: index, selected: false };\r\n            })).then(data => {\r\n                action.asyncDispatch(setLoaded(data));\r\n                action.asyncDispatch(display(data));\r\n                action.asyncDispatch(order());\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                requestedData: true\r\n            }\r\n        }\r\n\r\n        case SET_LOADED: {\r\n            return { ...state, loadedData: action.payload }\r\n        }\r\n\r\n        case DISPLAY: {\r\n            return { ...state, renderItems: action.payload }\r\n        }\r\n\r\n        case ORDER: {\r\n            let temp = [...state.loadedData];\r\n            temp.sort((a, b) => {\r\n                return a.order - b.order;\r\n            });\r\n            return { ...state, renderItems: temp }\r\n        }\r\n\r\n        case ADD_ORDER: {\r\n            let found = state.renderItems.find(v => v.id === action.payload.id);\r\n            let index = state.renderItems.indexOf(found);\r\n            let renderItems = [...state.renderItems];\r\n\r\n            if (found && (index > -1)) {\r\n                if (renderItems.length - index >= 2) {\r\n                    renderItems[index].order++;\r\n                    renderItems[index + 1].order--;\r\n\r\n                    let temp = renderItems[index];\r\n                    renderItems[index] = renderItems[index + 1];\r\n                    renderItems[index + 1] = temp;\r\n                }\r\n            }\r\n\r\n            return { ...state, renderItems: renderItems }\r\n        }\r\n\r\n        case REMOVE_ORDER: {\r\n            let found = state.renderItems.find(v => v.id === action.payload.id);\r\n            let index = state.renderItems.indexOf(found);\r\n            let renderItems = [...state.renderItems];\r\n            if (found && (index > -1)) {\r\n                if (index > 0) {\r\n                    renderItems[index].order--;\r\n                    renderItems[index - 1].order++;\r\n\r\n                    let temp = renderItems[index];\r\n                    renderItems[index] = renderItems[index - 1];\r\n                    renderItems[index - 1] = temp;\r\n                }\r\n            }\r\n\r\n            return { ...state, renderItems: renderItems }\r\n        }\r\n\r\n        case DELETE_AUTHOR: {\r\n            return {\r\n                ...state, renderItems: state.renderItems.filter(value => {\r\n                    return value.id != action.payload.id\r\n                })\r\n            }\r\n        }\r\n\r\n        case START_EDITING_AUTHOR: {\r\n            \r\n            let renderItems = [...state.renderItems];\r\n            let author = renderItems.find( item => item.id === action.payload.id)\r\n            let indexOf = renderItems.indexOf(author);\r\n            renderItems[indexOf].selected = true;\r\n\r\n            return {\r\n                ...state, renderItems: renderItems\r\n            }\r\n        }\r\n\r\n        case STOP_EDITING_AUTHOR: {\r\n            let renderItems = [...state.renderItems];\r\n            let author = renderItems.find( item => item.id === action.payload.id)\r\n            let indexOf = renderItems.indexOf(author);\r\n            renderItems[indexOf].selected = false;\r\n            \r\n            return {\r\n                ...state, renderItems: renderItems\r\n            }\r\n        }\r\n\r\n        case EDIT_AUTHOR: {\r\n            let renderItems = [...state.renderItems];\r\n            let author = renderItems.find( item => item.id === action.payload.id)\r\n            let indexOf = renderItems.indexOf(author);\r\n            renderItems[indexOf].name = action.payload.name;\r\n            \r\n            return {\r\n                ...state, renderItems: renderItems\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst asyncDispatchMiddleware = store => next => action => {\r\n    let syncActivityFinished = false;\r\n    let actionQueue = [];\r\n\r\n    function flushQueue() {\r\n        actionQueue.forEach(a => store.dispatch(a));\r\n        actionQueue = [];\r\n    }\r\n\r\n    function asyncDispatch(asyncAction) {\r\n        actionQueue = actionQueue.concat([asyncAction]);\r\n\r\n        if (syncActivityFinished) {\r\n            flushQueue();\r\n        }\r\n    }\r\n\r\n    const actionWithAsyncDispatch =\r\n        Object.assign({}, action, { asyncDispatch });\r\n\r\n    next(actionWithAsyncDispatch);\r\n    syncActivityFinished = true;\r\n    flushQueue();\r\n};\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(asyncDispatchMiddleware));\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}