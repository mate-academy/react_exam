{"version":3,"sources":["redux/action.js","redux/reducer.js","components/AuthorHandler.js","components/Author.js","components/AuthorList.js","components/AuthorListHandler.js","App.js","serviceWorker.js","index.js"],"names":["LOAD","DISPLAY","SELECT_AUTHOR","DESELECT_AUTHOR","DELETE_AUTHOR","EDIT_AUTHOR","CANCEL_EDITING","UPDATE_AUTHOR","UPDATE_EDITED_NAME","MOVE_AUTHOR_UP","MOVE_AUTHOR_DOWN","load","dispatch","type","fetch","then","date","json","data","authors","setInterval","initialState","selectedIndex","editedName","editMode","requested","swapAuthorsItem","array","index1","index2","newArray","Object","toConsumableArray","_ref","connect","state","ownProps","isSelected","authorIndex","editable","author","disabled","allAuthor","selectAuthor","deletedAuthor","editAuthor","updateEditedName","cancelEditing","updateAuthor","moveAuthorUp","moveAuthorDown","props","react_default","a","createElement","className","autoFocus","value","onChange","event","target","onKeyDown","key","onClick","length","AuthorList","_this","this","map","index","AuthorHandler","Component","deselectAuthor","store","createStore","arguments","undefined","action","objectSpread","newSelectedIndex","filter","applyMiddleware","thunk","App","es","AuthorListHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db5cad24.chunk.js","sourcesContent":["export const LOAD = 'load';\r\nexport const DISPLAY = 'display';\r\nexport const SELECT_AUTHOR = 'select_author';\r\nexport const DESELECT_AUTHOR = 'deselect_author';\r\nexport const DELETE_AUTHOR = 'delete_author';\r\nexport const EDIT_AUTHOR = 'edit_author';\r\nexport const CANCEL_EDITING = 'cancel_editing';\r\nexport const UPDATE_AUTHOR = 'update_author';\r\nexport const UPDATE_EDITED_NAME = 'update_edited_name';\r\nexport const MOVE_AUTHOR_UP = 'move_author_up';\r\nexport const MOVE_AUTHOR_DOWN = 'move_author_down';\r\n\r\nexport function load() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOAD\r\n    });\r\n    fetch('http://my-json-server.typicode.com/mate-academy/literary-blog/authors')\r\n      .then(date => date.json())\r\n      .then((data) => {\r\n        dispatch(display(data));\r\n      })\r\n    };\r\n  }\r\n\r\nexport function display(authors) {\r\n  setInterval(() => {}, 2000)\r\n  return {\r\n    type: DISPLAY,\r\n    authors\r\n  };\r\n}\r\n\r\nexport function selectAuthor(selectedIndex) {\r\n  return {\r\n    type: SELECT_AUTHOR,\r\n    selectedIndex\r\n  };\r\n}\r\n\r\nexport function deselectAuthor() {\r\n  return {\r\n    type: DESELECT_AUTHOR\r\n  };\r\n}\r\n\r\nexport function deletedAuthor(authorIndex) {\r\n  return {\r\n    type: DELETE_AUTHOR,\r\n    authorIndex\r\n  };\r\n}\r\n\r\nexport function editAuthor() {\r\n  return {\r\n    type: EDIT_AUTHOR\r\n  };\r\n}\r\n\r\nexport function updateEditedName(editedName) {\r\n  return {\r\n    type: UPDATE_EDITED_NAME,\r\n    editedName\r\n  };\r\n}\r\n\r\nexport function cancelEditing() {\r\n  return {\r\n    type: CANCEL_EDITING\r\n  };\r\n}\r\n\r\nexport function updateAuthor() {\r\n  return {\r\n    type: UPDATE_AUTHOR\r\n  };\r\n}\r\n\r\nexport function moveAuthorUp() {\r\n  return {\r\n    type: MOVE_AUTHOR_UP\r\n  };\r\n}\r\n\r\nexport function moveAuthorDown() {\r\n  return {\r\n    type: MOVE_AUTHOR_DOWN\r\n  };\r\n}\r\n","import {\r\n  LOAD,\r\n  DISPLAY,\r\n  SELECT_AUTHOR,\r\n  DESELECT_AUTHOR,\r\n  DELETE_AUTHOR,\r\n  EDIT_AUTHOR,\r\n  CANCEL_EDITING,\r\n  UPDATE_AUTHOR,\r\n  UPDATE_EDITED_NAME,\r\n  MOVE_AUTHOR_UP,\r\n  MOVE_AUTHOR_DOWN\r\n} from \"./action\";\r\n\r\nconst initialState = {\r\n  authors: null,\r\n  selectedIndex: null,\r\n  editedName: null,\r\n  editMode: null,\r\n  requested: false\r\n};\r\n\r\nfunction swapAuthorsItem(array, index1, index2) {\r\n  const newArray = [...array];\r\n  [newArray[index1], newArray[index2]] = [newArray[index2], newArray[index1]];\r\n  return newArray;\r\n}\r\n\r\nexport function getNextState(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD:\r\n      return {\r\n        ...state,\r\n        requested: true\r\n      };\r\n    case DISPLAY:\r\n      return {\r\n        ...state,\r\n        authors: action.authors,\r\n        editMode: false\r\n      };\r\n    case SELECT_AUTHOR:\r\n      if (state.editMode) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedIndex: action.selectedIndex\r\n        };\r\n      }\r\n    case DESELECT_AUTHOR:\r\n      if (state.editMode) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedIndex: null\r\n        };\r\n      }\r\n    case DELETE_AUTHOR:\r\n      let newSelectedIndex;\r\n      if (state.selectedIndex === action.authorIndex) {\r\n        newSelectedIndex = null;\r\n      } else if (state.selectedIndex > action.authorIndex) {\r\n        newSelectedIndex = state.selectedIndex - 1;\r\n      } else {\r\n        newSelectedIndex = state.selectedIndex;\r\n      }\r\n      return {\r\n        ...state,\r\n        authors: state.authors.filter((author, index) => index !== action.authorIndex),\r\n        selectedIndex: newSelectedIndex,\r\n        editMode: state.selectedIndex === action.authorIndex ? false : state.editMode,\r\n        editedName: state.selectedIndex === action.authorIndex ? null : state.editedName\r\n      };\r\n    case EDIT_AUTHOR:\r\n      return {\r\n        ...state,\r\n        editMode: true,\r\n        editedName: state.authors[state.selectedIndex].author\r\n      };\r\n    case CANCEL_EDITING:\r\n      return {\r\n        ...state,\r\n        editMode: false,\r\n        editedName: null\r\n      };\r\n    case UPDATE_AUTHOR:\r\n      return {\r\n        ...state,\r\n        authors: state.authors.map((author, index) => {\r\n          if (index !== state.selectedIndex) {\r\n            return author;\r\n          } else {\r\n            return state.editedName;\r\n          }\r\n        }),\r\n        editMode: false\r\n      };\r\n    case UPDATE_EDITED_NAME:\r\n      return {\r\n        ...state,\r\n        editedName: action.editedName\r\n      }\r\n    case MOVE_AUTHOR_UP:\r\n      return {\r\n        ...state,\r\n        authors: swapAuthorsItem(\r\n          state.authors,\r\n          state.selectedIndex,\r\n          state.selectedIndex - 1\r\n        ),\r\n        selectedIndex: state.selectedIndex - 1\r\n      };\r\n    case MOVE_AUTHOR_DOWN:\r\n      return {\r\n        ...state,\r\n        authors: swapAuthorsItem(\r\n          state.authors,\r\n          state.selectedIndex,\r\n          state.selectedIndex + 1\r\n        ),\r\n        selectedIndex: state.selectedIndex + 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Author from \"./Author\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectAuthor,\r\n  deletedAuthor,\r\n  editAuthor,\r\n  updateEditedName,\r\n  cancelEditing,\r\n  updateAuthor,\r\n  moveAuthorUp,\r\n  moveAuthorDown\r\n} from \"../redux/action\";\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const isSelected = state.selectedIndex === ownProps.authorIndex;\r\n  const editable = state.editMode && isSelected;\r\n  return {\r\n    author: ownProps.author,\r\n    isSelected: isSelected,\r\n    editable: editable,\r\n    editedName: editable ? state.editedName : null,\r\n    selectedIndex: state.selectedIndex,\r\n    disabled: ownProps.allAuthor\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    selectAuthor: () => dispatch(selectAuthor(ownProps.authorIndex)),\r\n    deletedAuthor: () => dispatch(deletedAuthor(ownProps.authorIndex)),\r\n    editAuthor: () => dispatch(editAuthor()),\r\n    updateEditedName: editedName => dispatch(updateEditedName(editedName)),\r\n    cancelEditing: () => dispatch(cancelEditing()),\r\n    updateAuthor: () => dispatch(updateAuthor()),\r\n    moveAuthorUp: () => dispatch(moveAuthorUp()),\r\n    moveAuthorDown: () => dispatch(moveAuthorDown())\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Author);\r\n","import React from 'react';\r\nimport './Author.css';\r\n\r\nexport default function Author(props) {\r\n  return (\r\n    <article className={props.isSelected ? 'selected' : null}>\r\n      {\r\n        props.editable\r\n          ? <input type=\"text\"\r\n          autoFocus\r\n            value={props.editedName}\r\n            onChange={(event) => props.updateEditedName(event.target.value)}\r\n            onKeyDown={(event) => {\r\n              if (event.key === 'Enter') {\r\n                props.updateAuthor();\r\n              } else if (event.key === 'Escape') {\r\n                props.cancelEditing();\r\n              }\r\n            }}\r\n          />\r\n          : <div className=\"author\">\r\n              <p onClick={props.selectAuthor}>{props.author}</p>\r\n              <button className=\"btn-remove show-when-selected\" onClick={props.deletedAuthor}>&times;</button>\r\n            </div>\r\n      }\r\n      <div className=\"author-btn\">\r\n        <button className='show-when-selected btn' onClick={props.editAuthor}>Edit</button>\r\n        <button disabled={props.selectedIndex === 0 || props.selectedIndex === null}\r\n          className='show-when-selected btn'\r\n          onClick={props.moveAuthorUp}>Up</button>\r\n        <button disabled={props.selectedIndex === props.disabled.length - 1 || props.selectedIndex === null}\r\n          className='show-when-selected btn'\r\n          onClick={props.moveAuthorDown}>Down</button>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport AuthorHandler from './AuthorHandler';\r\nimport './AuthorList.css'\r\n\r\nexport default class AuthorList extends Component {\r\n  render() {\r\n    return (\r\n      !this.props.requested\r\n        ? <div className=\"btn-preLoad\" onClick={this.props.load}>Load</div>\r\n        : (this.props.authors === null)\r\n        ? <div className=\"🤚\">\r\n            <div className=\"👉\"></div>\r\n            <div className=\"👉\"></div>\r\n            <div className=\"👉\"></div>\r\n            <div className=\"👉\"></div>\r\n            <div className=\"🌴\"></div>\r\n            <div className=\"👍\"></div>\r\n          </div>\r\n        : this.props.authors.map((author, index) =>\r\n          <AuthorHandler\r\n            key={index}\r\n            author={author}\r\n            authorIndex={index}\r\n            allAuthor={this.props.authors}\r\n          />\r\n      )\r\n    )\r\n  }\r\n}\r\n","import AuthorList from \"./AuthorList\";\r\nimport { connect } from 'react-redux';\r\nimport { load, deselectAuthor } from \"../redux/action\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    authors: state.authors,\r\n    selectedIndex: state.selectedIndex,\r\n    editMode: state.editMode,\r\n    editedName: state.editedName,\r\n    requested: state.requested\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    load: () => dispatch(load()),\r\n    deselectAuthor: () => dispatch(deselectAuthor())\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorList);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { getNextState } from './redux/reducer';\r\nimport AuthorListHandler from './components/AuthorListHandler';\r\nimport './App.css';\r\n\r\nconst store = createStore(getNextState, applyMiddleware(thunk));\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Provider store={store}>\r\n        <AuthorListHandler />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}